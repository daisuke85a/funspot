<script type="text/javascript">
    $(function(){
        $(".navbar").removeClass("navbar-devise");
        $(".navbar").addClass("navbar-default");
    });
</script>

<div class="jumbotron">
    <%= render 'partial/navbar' %>

    <div class="container">
        <div class="row">
            <div class="col-md-6 col-md-offset-3 text-center">
                <h1 class="display-3">Fun Spot</h1>
                <p>空いているレンタルスタジオをらくらくサーチ</p>
            </div>
        </div>
    </div>

    <!-- Search Form -->
    <!-- TODO: 開始、終了時間から予約が埋まっていないスタジオをリストアップできるようにする。 -->
    <!-- TODO: 時間を入れられるようにする。 -->
    <!-- TODO: あとで深夜連、とかも選択できるようにする。 -->
    <!-- TODO: 場所が入力されている場合は、それも考慮したい。 -->
    <!-- TODO: 最寄り駅からの距離を検索条件に加えたい。https://mask.hatenadiary.com/entry/2014/06/16/193027 -->
    <!-- http://www.kokudo.or.jp/database/004.html を見ると -->
    <!-- TODO: レンタル時期がざっくりと、（昼間、夕方、深夜、など）選べるようにする -->
    <div class="top-search-field">
        <%= form_tag search_path, method: :get do %>
            <div class="row">
                <div class="container">
                    <%= hidden_field_tag :lat %>
                    <%= hidden_field_tag :lng %>
                    <div class="col-md-2" style="padding-right: 0px">
                        <%= text_field_tag :search, params[:search], placeholder: "希望の場所はどこですか？", class: "form-control",id:"top-search-form" %>
                    </div>
                    <div class="col-md-2">
                        <%= text_field_tag :start_date, params[:start_date], placeholder: "開始日", class: "form-control" %>
                    </div>
                    <div class="col-md-2">
                        <%= text_field_tag :start_time, params[:start_time], placeholder: "開始時間", class: "form-control" %>
                    </div>
                    <div class="col-md-2">
                        <%= text_field_tag :end_date, params[:end_date], placeholder: "終了日", class: "form-control" %>
                    </div>
                    <div class="col-md-2">
                        <%= text_field_tag :end_time, params[:end_time], placeholder: "終了時間", class: "form-control" %>
                    </div>
                    <div class="col-md-2">
                        <%= submit_tag "検索", class: "btn btn-primary" %>
                    </div>
                </div>
            </div>
        <% end %>
    </div>
</div>

<div class="container">  
  <!-- ご利用の流れ -->
  <section id="services">
    <div class="container">
      <div class="row row-space-4">
        <div class="col-lg-12 text-center">
          <h2 class="section-heading">ご利用の流れ</h2>
          <h3 class="section-subheading">Funspotは空きがあるレンタルスタジオを簡単に探せるサービスです</h3>
        </div>
      </div>
      <div class="row text-center">
        <div class="col-md-4">
          <%= image_tag 'search-icon'%>
          <h4 class="service-heading">探す</h4>
          <p class="text-muted hidden-xs">まず、空きがあるレンタルスタジオをこのサイトで検索しましょう。</p>
        </div>
        <div class="col-md-4">
          <%= image_tag 'calendar-icon'%>
          <h4 class="service-heading">予約する</h4>
          <p class="text-muted hidden-xs">該当するレンタルスタジオがあったら予約しましょう。</p>
        </div>
        <div class="col-md-4">
          <%= image_tag 'dance-icon'%>
          <h4 class="service-heading">利用する</h4>
          <p class="text-muted hidden-xs">予約した日の当日になったら、レンタルスタジオを各種リハーサルなどに利用しましょう！</p>
        </div>
      </div>
    </div>
  </section> 

  <!-- おすすめのFunSpot -->
  <section id="portfolio" class="bg-light-gray row-space-top-4 row-space-4">
    <div class="container">
        <div class="row ro-space-2">
            <div class="col-lg-12 text-center">
                <h3 class="section-heading">おすすめのFunspot紹介</h3>
                <h4 class="section-subheading">認定済みのFunspotです</h4
>           </div>
        </div>

        <div class="row">
            <% @users.each do |user|%>
                <% if !user.myfunspots.blank?%>
                    <div class="portfolio-caption">
                        <span style="font-weight: bold;"><%= user.name %>さん</span>
                    </div>
                <% end %>
            <% end %>
        </div>
        </div>
    </section>
</div>

<%= render 'partial/footer' %>

<script>
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

function init() {
    var input = document.getElementById('top-search-form');
    var types = document.getElementById('type-selector');
    var strictBounds = document.getElementById('strict-bounds-selector');

    var autocomplete = new google.maps.places.Autocomplete(input);


    // Set the data fields to return when the user selects a place.
    autocomplete.setFields(
        ['address_components', 'geometry', 'icon', 'name']);

    autocomplete.addListener('place_changed', function() {
        var place = autocomplete.getPlace();
        var lat = place.geometry.location.lat();
        var lng = place.geometry.location.lng();

        document.getElementById('lat').value = lat;
        document.getElementById('lng').value = lng;

        if (!place.geometry) {
        // User entered the name of a Place that was not suggested and
        // pressed the Enter key, or the Place Details request failed.
        window.alert("No details available for input: '" + place.name + "'");
        return;
        }

        var address = '';
        if (place.address_components) {
        address = [
            (place.address_components[0] && place.address_components[0].short_name || ''),
            (place.address_components[1] && place.address_components[1].short_name || ''),
            (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
        }
    });

    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    function setupClickListener(id, types) {
        var radioButton = document.getElementById(id);
        radioButton.addEventListener('click', function() {
        autocomplete.setTypes(types);
        });
    }

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-address', ['address']);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);

    document.getElementById('use-strict-bounds')
        .addEventListener('click', function() {
            console.log('Checkbox clicked! New state=' + this.checked);
            autocomplete.setOptions({strictBounds: this.checked});
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC7uMRd6myPnerdHP6mwi2p3M1vIXqw0Wo&libraries=places&callback=init"
    async defer></script>
